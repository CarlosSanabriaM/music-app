/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package musicapp;

import java.awt.Color;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author carlos
 */
public class NuevaPlaylistDialog extends javax.swing.JDialog {
    
    //Constructor por defecto
    public NuevaPlaylistDialog(){
        this(null,true);
    }
    /**
     * Creates new form NuevaPlaylisty
     */
    public NuevaPlaylistDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        lpintando = (LabelPintando) lPaint;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfNombrePL = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        panelImagenPL = new javax.swing.JPanel();
        lPaint = new LabelPintando();
        bElegirImagenPL = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDescripcionPL = new javax.swing.JTextArea();
        bCancelarPL = new javax.swing.JButton();
        bCrearPL = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(80, 80, 80));
        jLabel1.setText("Nombre");

        tfNombrePL.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        tfNombrePL.setForeground(java.awt.Color.lightGray);
        tfNombrePL.setText("Nombre de la Playlist");
        tfNombrePL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNombrePLFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNombrePLFocusLost(evt);
            }
        });
        tfNombrePL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNombrePLActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(80, 80, 80));
        jLabel2.setText("Imágen");

        panelImagenPL.setBackground(new java.awt.Color(255, 255, 255));
        panelImagenPL.setLayout(new java.awt.GridLayout(1, 0));

        lPaint.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lPaintMouseDragged(evt);
            }
        });
        lPaint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lPaintMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lPaintMouseReleased(evt);
            }
        });
        panelImagenPL.add(lPaint);

        bElegirImagenPL.setBackground(new java.awt.Color(153, 153, 153));
        bElegirImagenPL.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        bElegirImagenPL.setForeground(new java.awt.Color(255, 255, 255));
        bElegirImagenPL.setText("Elegir imágen");
        bElegirImagenPL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElegirImagenPLActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(80, 80, 80));
        jLabel3.setText("Descripción");

        taDescripcionPL.setColumns(20);
        taDescripcionPL.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        taDescripcionPL.setForeground(java.awt.Color.lightGray);
        taDescripcionPL.setRows(5);
        taDescripcionPL.setText("Ponle a tu playlist una descripción");
        taDescripcionPL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                taDescripcionPLFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                taDescripcionPLFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(taDescripcionPL);

        bCancelarPL.setBackground(new java.awt.Color(100, 100, 100));
        bCancelarPL.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        bCancelarPL.setForeground(new java.awt.Color(255, 255, 255));
        bCancelarPL.setText("Cancelar");
        bCancelarPL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarPLActionPerformed(evt);
            }
        });

        bCrearPL.setBackground(new java.awt.Color(43, 110, 232));
        bCrearPL.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        bCrearPL.setForeground(new java.awt.Color(255, 255, 255));
        bCrearPL.setText("Crear");
        bCrearPL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearPLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfNombrePL)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(panelImagenPL, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(bCancelarPL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(bCrearPL))
                                            .addComponent(jLabel3))
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(bElegirImagenPL)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfNombrePL, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(panelImagenPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bElegirImagenPL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCancelarPL)
                    .addComponent(bCrearPL))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCrearPLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearPLActionPerformed
        //Si el nombre de la PL es el por defecto de ayuda (en gris) nos tiene que salir un dialogo de aviso
        if(tfNombrePL.getText().equalsIgnoreCase("Nombre de la playlist") && tfNombrePL.getForeground().equals(Color.LIGHT_GRAY)){
            JOptionPane.showMessageDialog(null, "Tienes que darle un nombre a la \nplaylist antes de crearla", " Es necesario un nombre", JOptionPane.WARNING_MESSAGE);
        }
        
        //Si no hemos seleccionado una imagen
        else if(lpintando.getIcon()==null)
            JOptionPane.showMessageDialog(null, "Tienes que seleccionar una imágen", " Es necesaria una imágen", JOptionPane.WARNING_MESSAGE);
        
        //Si no hay un recuadro verde que selecciona la zona de la imagen a recortar
        else if(lpintando.getColor()!=Color.green)
            JOptionPane.showMessageDialog(null, "Tienes que seleccionar una \nzona de la imágen", " Es necesaria una selección", JOptionPane.WARNING_MESSAGE);
        
        else{//Si se cumple yodo lo anterior
            PCrear=true;
            setVisible(false);
        }
    }//GEN-LAST:event_bCrearPLActionPerformed

    private void bCancelarPLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarPLActionPerformed
        setVisible(false);
    }//GEN-LAST:event_bCancelarPLActionPerformed

    private void tfNombrePLFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNombrePLFocusGained
        //Si el texto pone "Nombre de la playlist" en gris y ponemos el focus sobre el tf nos deja escribir el nombre de la pl
        if(tfNombrePL.getText().equalsIgnoreCase("Nombre de la playlist") && tfNombrePL.getForeground().equals(Color.LIGHT_GRAY)){
            PonerTexto("", tfNombrePL, Color.black);
        }
    }//GEN-LAST:event_tfNombrePLFocusGained

    private void tfNombrePLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNombrePLFocusLost
        //Si el texto es vacio y quitamos el focus del tf ponemos el texto de fondo de ayuda (de color gris)
        if(tfNombrePL.getText().equalsIgnoreCase("")){
            PonerTextoFondo("Nombre de la playlist", tfNombrePL);
        }
    }//GEN-LAST:event_tfNombrePLFocusLost

    private void taDescripcionPLFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_taDescripcionPLFocusGained
        //Si el texto pone "Ponle a tu playlist una descripción (Opcional)" en gris y ponemos el focus sobre el ta nos deja escribir la descripcion
        if(taDescripcionPL.getText().equalsIgnoreCase("Ponle a tu playlist una descripción (Opcional)") && taDescripcionPL.getForeground().equals(Color.LIGHT_GRAY)){
            PonerTexto("", taDescripcionPL, Color.black);
        }
    }//GEN-LAST:event_taDescripcionPLFocusGained

    private void taDescripcionPLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_taDescripcionPLFocusLost
        //Si el texto es vacio y quitamos el focus del ta ponemos el texto de fondo de ayuda (de color gris)
        if(taDescripcionPL.getText().equalsIgnoreCase("")){
            PonerTextoFondo("Ponle a tu playlist una descripción (Opcional)", taDescripcionPL);
        }
    }//GEN-LAST:event_taDescripcionPLFocusLost

    private void bElegirImagenPLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElegirImagenPLActionPerformed
        //Mostramos un dialogo para seleccionar una imagen
        JFileChooser FC = new JFileChooser();
        FC.showOpenDialog(null);
        
        String ruta = null;
        if(FC.getSelectedFile()!=null)
            ruta = FC.getSelectedFile().getAbsolutePath();
        if(ruta!=null)
            PonerIconoAjustado(lPaint, ruta);
    }//GEN-LAST:event_bElegirImagenPLActionPerformed
    
    private void tfNombrePLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNombrePLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNombrePLActionPerformed

    private void lPaintMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lPaintMouseDragged
        //Solo dibujamos si hay una imagen seleccionada
        if(lpintando.getIcon()!=null){
        //Guardamos x2 e y2
        lpintando.setX2(evt.getX()); 
        lpintando.setY2(evt.getY());
        lpintando.repaint();
        }
    }//GEN-LAST:event_lPaintMouseDragged

    private void lPaintMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lPaintMousePressed
        //Solo dibujamos si hay una imagen seleccionada
        if(lpintando.getIcon()!=null){
        //Guardamos x1 e y1
        lpintando.setX1(evt.getX()); 
        lpintando.setY1(evt.getY());
        
        //Guardamos tambien esos mismos valores para x2 e y2, para que no tengan valores anteriores
        //y nos dibuje el rectangulo sin haber arrastrado el cursor
        lpintando.setX2(evt.getX()); 
        lpintando.setY2(evt.getY());
        
        lpintando.setColor(Color.black);
        lpintando.repaint();
        }
    }//GEN-LAST:event_lPaintMousePressed

    private void lPaintMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lPaintMouseReleased
        //Solo dibujamos si hay una imagen seleccionada
        if(lpintando.getIcon()!=null){       
        //Cuando soltemos el click, ponemos el recuadro en verde
        lpintando.setColor(Color.green);
        lpintando.repaint();
        }
    }//GEN-LAST:event_lPaintMouseReleased
    
    public void PonerTexto(String texto, javax.swing.text.JTextComponent comp, Color color){
        comp.setText(texto);
        comp.setForeground(color);
    }
    
    public void PonerTextoFondo(String texto, javax.swing.text.JTextComponent comp){
        PonerTexto(texto, comp, Color.LIGHT_GRAY);
    }
    
    public void PonerIconoAjustado(javax.swing.JLabel label, String rutaIcono){
        ImageIcon imagen = new ImageIcon(rutaIcono);
        Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_DEFAULT));
        label.setIcon(icono);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevaPlaylistDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevaPlaylistDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevaPlaylistDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevaPlaylistDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NuevaPlaylistDialog dialog = new NuevaPlaylistDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public String getNombrePL(){
        return this.tfNombrePL.getText();
    }
    
    public String getDescripcionPL(){
        return this.taDescripcionPL.getText();
    }
    
    public boolean showDialog(){
        //Ponemos el tf y el ta con los textos por defecto
        tfNombrePL.setForeground(Color.LIGHT_GRAY);
        taDescripcionPL.setForeground(Color.LIGHT_GRAY);
        tfNombrePL.setText("Nombre de la Playlist");
        taDescripcionPL.setText("Ponle a tu playlist una descripción (Opcional)");
        lpintando.setIcon(null);
        lpintando.borra();
        PCrear=false;
        setVisible(true);
        //Es un codigo bloqueante
        //Como la ventana es modal se queda bloqueando la ventana anterior
        //La ventana antigua queda bloqueada porque el metodo setVisible no termina
        //Bloqueas la cola de eventos de la ventana que lo llama y crea otra cola de eventos
        return PCrear;//Aqui PCrear vale true si el usuario pulso el boton Crear y false si pulso Cancelar o cerro la ventana
    }

    
    private boolean PCrear;//¿Se pulso el boton de crear?
    private LabelPintando lpintando;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancelarPL;
    private javax.swing.JButton bCrearPL;
    private javax.swing.JButton bElegirImagenPL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lPaint;
    private javax.swing.JPanel panelImagenPL;
    private javax.swing.JTextArea taDescripcionPL;
    private javax.swing.JTextField tfNombrePL;
    // End of variables declaration//GEN-END:variables
}
